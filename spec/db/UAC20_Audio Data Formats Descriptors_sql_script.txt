----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS type_i_format_type_descriptor;
CREATE TABLE type_i_format_type_descriptor (
    id INTEGER PRIMARY KEY,
    parent_id INTEGER,
    bLength VARCHAR(2),
    bDescriptorType VARCHAR(2),
    bDescriptorSubtype VARCHAR(2),
    bFormatType VARCHAR(2),
    bSubslotSize VARCHAR(2),
    bBitResolution VARCHAR(2));
PRAGMA foreign_keys = on;


----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS type_ii_format_type_descriptor;
CREATE TABLE type_ii_format_type_descriptor (
    id INTEGER PRIMARY KEY,
    parent_id INTEGER,
    bLength VARCHAR(2),
    bDescriptorType VARCHAR(2),
    bDescriptorSubtype VARCHAR(2),
    bFormatType VARCHAR(2),
    wMaxBitRate VARCHAR(4),
    wSlotsPerFrame VARCHAR(4));
PRAGMA foreign_keys = on;


----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS type_iii_format_type_descriptor;
CREATE TABLE type_iii_format_type_descriptor (
    id INTEGER PRIMARY KEY,
    parent_id INTEGER,
    bLength VARCHAR(2),
    bDescriptorType VARCHAR(2),
    bDescriptorSubtype VARCHAR(2),
    bFormatType VARCHAR(2),
    bSubslotSize VARCHAR(2),
    bBitResolution VARCHAR(2));
PRAGMA foreign_keys = on;


----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS type_iv_format_type_descriptor;
CREATE TABLE type_iv_format_type_descriptor (
    id INTEGER PRIMARY KEY,
    parent_id INTEGER,
    bLength VARCHAR(2),
    bDescriptorType VARCHAR(2),
    bDescriptorSubtype VARCHAR(2),
    bFormatType VARCHAR(2));
PRAGMA foreign_keys = on;


----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS extended_type_i_format_type_descriptor;
CREATE TABLE extended_type_i_format_type_descriptor (
    id INTEGER PRIMARY KEY,
    parent_id INTEGER,
    bLength VARCHAR(2),
    bDescriptorType VARCHAR(2),
    bDescriptorSubtype VARCHAR(2),
    bFormatType VARCHAR(2),
    bSubslotSize VARCHAR(2),
    bBitResolution VARCHAR(2),
    bHeaderLength VARCHAR(2),
    bControlSize VARCHAR(2),
    bSideBandProtocol VARCHAR(2));
PRAGMA foreign_keys = on;


----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS extended_type_ii_format_type_descriptor;
CREATE TABLE extended_type_ii_format_type_descriptor (
    id INTEGER PRIMARY KEY,
    parent_id INTEGER,
    bLength VARCHAR(2),
    bDescriptorType VARCHAR(2),
    bDescriptorSubtype VARCHAR(2),
    bFormatType VARCHAR(2),
    wMaxBitRate VARCHAR(4),
    wSamplesPerFrame VARCHAR(4),
    bHeaderLength VARCHAR(2),
    bSideBandProtocol VARCHAR(2));
PRAGMA foreign_keys = on;


----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS extended_type_iii_format_type_descriptor;
CREATE TABLE extended_type_iii_format_type_descriptor (
    id INTEGER PRIMARY KEY,
    parent_id INTEGER,
    bLength VARCHAR(2),
    bDescriptorType VARCHAR(2),
    bDescriptorSubtype VARCHAR(2),
    bFormatType VARCHAR(2),
    bSubslotSize VARCHAR(2),
    bBitResolution VARCHAR(2),
    bHeaderLength VARCHAR(2),
    bSideBandProtocol VARCHAR(2));
PRAGMA foreign_keys = on;


----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS hi_res_presentation_timestamp_layout;
CREATE TABLE hi_res_presentation_timestamp_layout (
    id INTEGER PRIMARY KEY,
    parent_id INTEGER,
    bmFlags VARCHAR(8),
    qNanoSeconds VARCHAR(16));
PRAGMA foreign_keys = on;


